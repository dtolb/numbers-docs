!fileScope all
description: |
    This resource is used to manage SIP credentials for subscriber provisioning.

    SIP Credentials allow for the Authentication of SIP Messages presented to the Bandwidth Network.  These values are provisioned to the Network to allow the endpoints to participate in an Authentication Challenge (RFC 3261).  These values are compared (after processing) with a value received in the Authorization header of the SIP INVITE to determine whether the call will be allowed to proceed.

    The user is authenticated for access to the network using a composite-username, which is either a username string or a combination of a username and a domain separated with an '@'.  The other components of the authentication are MD5 hash values that are hashes of the composite username, the password, and either one or two instances of the Realm, to allow the network to recognize the two prevelent mechanisms for generating MD5 hashes.

    There are 4 components to the SIP Credentials payload...
    <ol>
    <li>The UserName (required) - a string identifying the user.</li>
    <li>The Domain (optional) - a string refining the identity of the user.  The Domain will be joined to the UserName with an '@' to create a composite username.  For example, the UserName 'bob' could be combined with the domain 'somewhere.com' to create a composite username 'bob@somewhere.com' </li> 
    <li>Hash1 (required) - a string representing a potential Hash values used to authenticate the client.  It is anticipated that the value will be computed from an MD5 Hash of 'composite-username:Realm:Password'.  The makeup of this hash is however transparent to the network.  It must align with a hash that the client is capable of creating</li>
    <li>Hash1 (optional)- a string representing a potential Hash value used to authenticate the client.  It is anticipated that the value will be computed from an MD5 Hash of 'composite-username:Realm:Realm:Password'.  The makeup of this hash is however transparent to the network.  It must align with a hash that the client is capable of creating.</li>
    </ol>
    If the Domain is not specified the Hash1b is not required.

!scope all
get:
    description: |
        GET is used to retrieve all SIP credentials for the account.
    queryParameters:
            page:
                description: |
                    An ID of the first element in a page.  This value will indicate the first value, not the count, of the initial entry in the page being requested.<br>
                    It can be an index of SIP credential or a combination of user name and domain in form {userName}@{domain}. The initial page is tagged with the ID '1'.
                type: string
                example: 3, user321@bw.com
                default: 1
                required: false
            size:
                description: The number of items to include in a page
                type: integer
                example: 5000
                default: 500
                required: false
            usernamefragment:
                description: The user name fragment. Min length - 3 characters.
                type: string
                example: user32
                required: false
            domainfragment:
                description: The domain fragment. Min length - 3 characters.
                type: string
                example: bw.
                required: false
    responses:
        200:
            description: |
                OK - the SIP credentials retrieval request will return a list of the SIP credentials that are created on this account.
            body:
                application/xml:
                    example: !include sipcredentials_GET_200_response_example.xml

        404:
            description: |
                Not Found - if the account specified does not exist or is locked or there are no SIP credentials associated with specified account it will result in a not found.
            body:
                application/xml:
                    example: !include sipcredentials_GET_404_response_example.xml


!scope all
post:
    description: |
        POST is used to create SIP credentials and associate its with the account.

        The key data elements in the submission are -
         <table style="text-align: left; width: 80%;"
         border="1" cellpadding="2" cellspacing="2">
          <tbody>
            <tr>
              <td>UserName</td>
              <td>This is subscriber name or aggregated name and domain value(ex: John@bw.com). Field is required. Max length - 32 characters.</td>
            </tr>
            <tr>
              <td>Domain</td>
              <td>This is subscriber domain. Domain is optional and if present will be appended to the UserName with an '@'. Max length - 32 characters.</td>
            </tr>
            <tr>
              <td>Hash1</td>
              <td>This is hash value #1 in MD5 representation. Field is required. Max length - 64 characters.</td>
            </tr>
            <tr>
              <td>Hash1b</td>
              <td>This is hash value #2 in MD5 representation. Field is optional. Max length - 64 characters.</td>
            </tr>
          </tbody>
        </table>

    body:
        application/xml:
            example: |
                <SipCredentials>
                    <SipCredential>
                        <UserName>John</UserName>
                        <Domain>bw.com</Domain>
                        <Hash1>1g32gadgs433dd4</Hash1>
                        <Hash1b>1g32gadgs433d24</Hash1b>
                    </SipCredential>
                    <SipCredential>
                        <UserName>Mathew@bw.com</UserName>
                        <Hash1>43543gggs43g324</Hash1>
                        <Hash1b>1g32gadgs433a34</Hash1b>
                    </SipCredential>
                </SipCredentials>
    responses:
        201:
            description: |
                Created - If there was at least one valid credential entry in specified list then such response will be returned.
            body:
                application/xml:
                    example: !include sipcredentials_POST_201_response_example.xml

        400:
            description: |
                Bad Request - If all credential entries in specified list are invalid it will result in bad request with list of errors.
            body:
                application/xml:
                    example: !include sipcredentials_POST_400_response_example.xml
!fileScope all
/{userName}: !include sipcredential/sipcredential.raml
