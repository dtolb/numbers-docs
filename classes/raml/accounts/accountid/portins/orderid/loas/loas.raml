!fileScope all

description: |
    The LOAS resource allows the uploading and storage of files that are associated with port-in orders.   Port-in uploads use the standard form-data approach for http file upload.  Details of the POST API call that drives the file upload are provided below.
        <br>
    The following MIME types are supported for the LOA upload file:<br>
    <ul>
    <li>PDF("application/pdf")</li>
    <li>PLAIN("text/plain")</li>
    <li>JPG("image/jpeg")</li>
    <li>TIFF("image/tiff")</li>
    <li>CSV("text/csv")</li>
    <li>XML("application/xml")</li>
    <li>WAV("audio/x-wav")</li>
    <li>ZIP("application/zip")</li>
    </ul>
    <br>
    The file upload is equivalent of the use of CURL to upload a file...<br>
        <br>
    <code> curl -H 'Content-Type: <MIME Type>' --data-binary "@<Filename>" â€“iv <Base URL>/portins/<order-id>/loas<br>
    </code>
        <br>
    an example for the upload of a pdf file is...<br>
        <br>
    <code> curl -H 'Content-Type: application/pdf' --data-binary "@Test_LOA.pdf" -iv <BASE URL>/portins/<order-id>/loas<br>
    </code> 
!scope all
get:
    description: Retrieves the list of the loa (and other) files associated with the portin order
    queryParameters:
        metadata:
            description: if true it will return meta-data assoociated with the file used to describe the file.
            type: boolean
            required: false
            default: false
            example: true
    responses:
        200:
            description: The list of all files is being returned.  This response includes the case where the list is empty.
            body:
                application/xml:
                    example: |
                        <fileListResponse>
                            <fileCount>2</fileCount>
                            <fileNames>803f3cc5-beae-469e-bd65-e9891ccdffb9-1092874634747.pdf</fileNames>
                            <fileNames>803f3cc5-beae-469e-bd65-e9891ccdffb9-1430814967669.pdf</fileNames>
                            <resultCode>0</resultCode>
                            <resultMessage>LOA file list successfully returned</resultMessage>
                        </fileListResponse>
                        <!-- OR --, for the case where there are no files... -->
                        <fileListResponse>
                            <fileCount>0</fileCount>
                            <resultCode>0</resultCode>
                            <resultMessage>No LOA files found for order</resultMessage>
                        </fileListResponse>
!scope all
post:
    description: |
        POSTing to the /loas resource will enable the upload of the file.  The key attribute to the POST is ensuring that the headers are correctly set to support the file upload.<br>
            <br>
        Header settings typical of a valid upload are...<br>
            <br>
        <code>
        Host: api.inetwork.com <br>
        Authorization: Basic xxxxxxxxxxxxxxxxxxxx== <br>
        Content-Type: application/pdf <br>
        Accept: */* <br>
        Accept-Encoding: gzip, deflate <br>
        Accept-Language: en-US,en;q=0.8 <br>
        Cache-Control: no-cache <br>
            <br>
        ----WebKitFormBoundaryE19zNvXGzXaLvS5C <br>
        Content-Disposition: form-data; name="george"; filename="Bandwidth Dashboard.pdf" <br>
        Content-Type: application/pdf <br>
            <br>
            <br>
        ----WebKitFormBoundaryE19zNvXGzXaLvS5C <br>
        </code>

    responses:
        201:
            description: |
                The 201 response indicates the successful creation of a file resource containing the uploaded content.

                The response header will include a link to the created file as a GET on the identified resource.
            body:
                application/xml:
                    example: |
                        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                        <fileUploadResponse>
                            <filename>63097af1-37ae-432f-8a0d-9b0e6517a35b-1429550165581.pdf</filename>
                            <resultCode>0</resultCode>
                            <resultMessage>LOA file uploaded successfully for order 63097af1-37ae-432f-8a0d-9b0e6517a35b</resultMessage>
                        </fileUploadResponse>
        400:
            description: A 400 indicates that the requested upload failed.
        
/{fileid}: !include fileid/fileid.raml
